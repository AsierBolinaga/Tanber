package abolinaga.tander;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.BaseAdapter;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;
import abolinaga.tander.custom.CustomActivity;
import abolinaga.tander.utils.Const;
import abolinaga.tander.utils.Utils;

import com.parse.FindCallback;
import com.parse.ParseException;
import com.parse.ParseUser;

/**
 * The Class UserList is the Activity class. It shows a list of all users of
 * this app. It also shows the Offline/Online status of users.
 */
public class TanderFriendsList extends CustomActivity
{

	/** The Chat list. */
	private ArrayList<ParseUser> uList;

	/** The user. */
	public static ParseUser user;
	
	private String ALLFRIENDS_STRING;

	/* (non-Javadoc)
	 * @see android.support.v4.app.FragmentActivity#onCreate(android.os.Bundle)
	 */
	@Override
	protected void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		setContentView(R.layout.tanderfriendlist);

		//getActionBar().setDisplayHomeAsUpEnabled(false);

		//updateUserStatus(true);
	}

	/* (non-Javadoc)
	 * @see android.support.v4.app.FragmentActivity#onDestroy()
	 */
	@Override
	protected void onDestroy()
	{
		super.onDestroy();
		//updateUserStatus(false);
	}

	/* (non-Javadoc)
	 * @see android.support.v4.app.FragmentActivity#onResume()
	 */
	@Override
	protected void onResume()
	{
		super.onResume();
		loadUserList();

	}

	/**
	 * Update user status.
	 * 
	 * @param online
	 *            true if user is online
	 */
	private void updateUserStatus(boolean online)
	{
		user.put("online", online);
		user.saveEventually();
	}
	
	/**
	 * Show list of Friends.
	 */
	private void ShowTanderFriends()
	{
		JSONObject jsonObject = null;
		ArrayList<HashMap<String,String>> hmList = new ArrayList<HashMap<String, String>>();
		
		try
		{
			jsonObject = new JSONObject(ALLFRIENDS_STRING);
			JSONArray jsonResult = jsonObject.getJSONArray(Config.TAG_JSON_ARRAY);
			
			for(int iLoop = 0; iLoop<jsonResult.length(); iLoop++)
			{
                JSONObject jo = jsonResult.getJSONObject(iLoop);
                String id = jo.getString(Config.TAG_ID);
                String name = jo.getString(Config.TAG_NAME);

                HashMap<String,String> employees = new HashMap<String,String>();
                employees.put(Config.TAG_ID,id);
                employees.put(Config.TAG_NAME,name);
                hmList.add(employees);
            }
		}
		catch(JSONException e)
		{
			 e.printStackTrace();
		}
		
		ListAdapter adapter = new SimpleAdapter(
				TanderFriendsList.this, hmList, R.layout.tanderfriendlist,
                new String[]{Config.TAG_ID,Config.TAG_NAME},
                new int[]{R.id.id, R.id.name});

        listView.setAdapter(adapter);

	}

	/**
	 * Load list of Friends.
	 */
	private void loadUserList()
	{
		class GetAllTanderFriends extends AsyncTask<Void, Void, String>
		{
			ProgressDialog pdLoading;
			
			@Override
			protected void onPreExecute() 
			{
				super.onPreExecute();
				pdLoading = ProgressDialog.show(TanderFriendsList.this,"Fetching Data","Wait...",false,false);
			}
			
			@Override
			protected void onPostExecute(String _strResult) 
			{
				super.onPostExecute(_strResult);
				pdLoading.dismiss();               
				ALLFRIENDS_STRING = _strResult;                
				ShowTanderFriends();
			}

			@Override
			protected String doInBackground(Void... _vParams) 
			{
				RequestHandler rh = new RequestHandler();
				String strResult = rh.sendGetRequest(Config.URL_GET_ALL);
				return strResult;
			}
		
		}
		
		GetAllTanderFriends gatf = new GetAllTanderFriends();
		gatf.execute();
	}

	/**
	 * The Class UserAdapter is the adapter class for User ListView. This
	 * adapter shows the user name and it's only online status for each item.
	 */
	private class UserAdapter extends BaseAdapter
	{

		/* (non-Javadoc)
		 * @see android.widget.Adapter#getCount()
		 */
		@Override
		public int getCount()
		{
			return uList.size();
		}

		/* (non-Javadoc)
		 * @see android.widget.Adapter#getItem(int)
		 */
		@Override
		public ParseUser getItem(int arg0)
		{
			return uList.get(arg0);
		}

		/* (non-Javadoc)
		 * @see android.widget.Adapter#getItemId(int)
		 */
		@Override
		public long getItemId(int arg0)
		{
			return arg0;
		}

		/* (non-Javadoc)
		 * @see android.widget.Adapter#getView(int, android.view.View, android.view.ViewGroup)
		 */
		@Override
		public View getView(int pos, View v, ViewGroup arg2)
		{
			if (v == null)
				v = getLayoutInflater().inflate(R.layout.chat_item, null);

			ParseUser c = getItem(pos);
			TextView lbl = (TextView) v;
			lbl.setText(c.getUsername());
			lbl.setCompoundDrawablesWithIntrinsicBounds(
					c.getBoolean("online") ? R.drawable.ic_online
							: R.drawable.ic_offline, 0, R.drawable.arrow, 0);

			return v;
		}

	}
}
