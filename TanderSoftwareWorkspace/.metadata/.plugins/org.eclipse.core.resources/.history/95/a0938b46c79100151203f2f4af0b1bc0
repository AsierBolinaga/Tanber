package abolinaga.tander;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.net.ssl.HttpsURLConnection;

public class RequestHandler 
{
	public String sendPostRequest(String _strRequestURL,  HashMap<String, String> _hmPostDataParams) 
	{
		URL url;
		
		//StringBuilder object to store the message retrieved from the server        
		StringBuilder sb = new StringBuilder();
		try
		{
			//Initializing URL
			url = new URL(_strRequestURL);
			
			//Creating an httmlurl connection
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			
			//Configuring connection properties            
			conn.setReadTimeout(15000);            
			conn.setConnectTimeout(15000);            
			conn.setRequestMethod("POST");            
			conn.setDoInput(true);            
			conn.setDoOutput(true);
			
			//Creating an output stream           
			OutputStream os = conn.getOutputStream();
			
			//Writing parameters to the request             
			//We are using a method getPostDataString which is defined below            
			BufferedWriter writer = new BufferedWriter(                    
					new OutputStreamWriter(os, "UTF-8"));            
			writer.write(getPostDataString(_hmPostDataParams));
			
			writer.flush();            
			writer.close();            
			os.close();            
			int responseCode = conn.getResponseCode();
			
			if (responseCode == HttpsURLConnection.HTTP_OK) 
			{                                
				BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));                
				sb = new StringBuilder();                
				String response;                
				
				//Reading server response                
				while ((response = br.readLine()) != null)
				{                    
					sb.append(response);               
				}            
			}
			else
			{
				/* Do Nothing */
			}
		}
		catch(Exception e)
		{
			e.printStackTrace();
			return e.getMessage();
		}
		
		return sb.toString();
	}
	
	 public String sendGetRequestParam(String _strRequestURL, String... _strParams)
	 {        
		 StringBuilder sb =new StringBuilder();   
		 
		 String strUserName = _strParams[0];                
		 String strPasword = _strParams[1];
		 
		 InputStream is = null;
         List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
         nameValuePairs.add(new BasicNameValuePair("username", strUserName));
         nameValuePairs.add(new BasicNameValuePair("password", pstrPaswordass));
         String strResult = null;
		 
		 try 
		 {            
			 URL url = new URL(_strRequestURL);            
			 HttpURLConnection con = (HttpURLConnection) url.openConnection();           
			 BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(con.getInputStream()));             
			 
			 String s;            
			 
			 while((s=bufferedReader.readLine())!=null)
			 {                
				 sb.append(s+"\n");            
			 }
		 }
		 catch(Exception e)
		 {        
			 return e.getMessage();
		 }        
		 
		 return sb.toString();   
	 }
	 
	 private String getPostDataString(HashMap<String, String> _hmParams) throws UnsupportedEncodingException 
	 {       
		 StringBuilder result = new StringBuilder();        
		 boolean first = true;       
		 
		 for (Map.Entry<String, String> entry : _hmParams.entrySet())
		 {            
			 if (first)               
			 {
				 first = false;            
			 }
			 else
			 {
				 result.append("&"); 
			 }
			 
			 result.append(URLEncoder.encode(entry.getKey(), "UTF-8"));            
			 result.append("=");            
			 result.append(URLEncoder.encode(entry.getValue(), "UTF-8"));        
		 }         
		 return result.toString();    
	 }		 
}
